name: Compress and Release Agent

on:
  schedule:
    - cron: '0 0 * * 0'  # 每周日午夜运行
  workflow_dispatch:      # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write     # 添加写入权限
    
    steps:
      - name: 安装 UPX
        run: sudo apt-get update && sudo apt-get install -y upx-ucl
      
      - name: 获取最新版本号
        id: get_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/nezhahq/agent/releases/latest | grep '"tag_name":' | cut -d'"' -f4)
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: 下载并解压 AMD64 版本
        run: |
          wget https://github.com/nezhahq/agent/releases/download/${{ steps.get_version.outputs.version }}/nezha-agent_linux_amd64.zip
          unzip -o nezha-agent_linux_amd64.zip
          echo "当前目录文件列表："
          ls -la
      
      - name: 下载并解压 ARM64 版本
        run: |
          wget https://github.com/nezhahq/agent/releases/download/${{ steps.get_version.outputs.version }}/nezha-agent_linux_arm64.zip
          unzip -o nezha-agent_linux_arm64.zip
          echo "当前目录文件列表："
          ls -la
      
      - name: UPX 压缩
        run: |
          # 找到并压缩可执行文件
          for file in $(find . -type f -executable); do
            if [[ $file == *"amd64"* ]]; then
              upx -9 "$file" -o swith_amd64
            elif [[ $file == *"arm64"* ]]; then
              upx -9 "$file" -o swith_arm64
            fi
          done

      - name: 创建 Release 并上传文件
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.run_number }}
          name: Release ${{ github.run_number }}
          files: |
            swith_amd64
            swith_arm64
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      - name: 创建架构标签
        run: |
          # 创建 AMD64 标签
          git tag -f amd64
          git push -f origin amd64
          
          # 创建 ARM64 标签
          git tag -f arm64
          git push -f origin arm64
