name: Compress and Release Agent

on:
  schedule:
    - cron: '0 0 * * 0'  # 每周日午夜运行
  workflow_dispatch:      # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: 安装 UPX
        run: sudo apt-get update && sudo apt-get install -y upx-ucl
      
      - name: 获取最新版本号
        id: get_version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/nezhahq/agent/releases/latest | grep '"tag_name":' | cut -d'"' -f4)
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
      
      - name: 下载 AMD64 版本
        run: |
          wget https://github.com/nezhahq/agent/releases/download/${{ steps.get_version.outputs.version }}/nezha-agent_linux_amd64.zip
          unzip nezha-agent_linux_amd64.zip
      
      - name: 下载 ARM64 版本
        run: |
          wget https://github.com/nezhahq/agent/releases/download/${{ steps.get_version.outputs.version }}/nezha-agent_linux_arm64.zip
          unzip nezha-agent_linux_arm64.zip
      
      - name: UPX 压缩
        run: |
          upx -9 nezha-agent_linux_amd64 -o swith_amd64
          upx -9 nezha-agent_linux_arm64 -o swith_arm64
      
      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      
      - name: 上传 AMD64 版本
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./swith_amd64
          asset_name: swith
          asset_content_type: application/octet-stream
          tag: amd64
      
      - name: 上传 ARM64 版本
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./swith_arm64
          asset_name: swith
          asset_content_type: application/octet-stream
          tag: arm64
